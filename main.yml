---
- name: Instalar Jitsi Stack
  hosts: all
  become: yes

  vars:
    pip_install_packages:
      - name: docker
    pacotes_deb:
      - linux-image-extra-virtual
      - ngrep
      - iftop
      - glances
      - docker-ce
      - sngrep
      # - docker-compose
    pacotes_centos:
      - ngrep
      - iftop
      - glances
      - docker-ce
      - docker-compose
  vars_files:
    # - vars/docker.yml
    # - vars/jibri.yml
  pre_tasks:
    - name: atualizar cache apt
      apt:
        cache_valid_time: 86400 # um dia

    - name: Informações sobre o host
      debug:
        msg:
          - "Usuário ansible: {{ ansible_user }}"
          - "Endereço IP: {{ ansible_host }}"

    - name: Adicionar repositorio do Serpro
      apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - deb [trusted=yes] http://update.blm.serpro/ubuntu-18.04 bionic-archive-serpro partner
        - deb [trusted=yes] http://update.blm.serpro/ubuntu-18.04 bionic main restricted universe multiverse
        - deb [trusted=yes] http://update.blm.serpro/ubuntu-18.04 bionic-regionais blm
        - deb [trusted=yes] http://update.blm.serpro/ubuntu-18.04 bionic-serpro local
      tags: repositorios
      when:
        - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
        - instalar_repositorio_serpro | bool

    - name: Instalar pré requisitos
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
      when:
        - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
        - instalar_repositorio_docker | bool

    - name: Adicionar chave GPG
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when:
        - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
        - instalar_repositorio_docker | bool

    - name: Adicionar repositório oficial docker
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
      when:
        - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
        - instalar_repositorio_docker | bool

    - name: Atualizar cache apt
      apt: update_cache=yes name=docker-ce state=latest
      when:
        - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
        - instalar_repositorio_docker | bool

    - name: instalar docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 0755
      when:
        - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
        - instalar_repositorio_docker | bool

    # - name: instalar módulo docker p/python
    #   pip:
    #     name: docker
    #   when:
    #     - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    #     - instalar_repositorio_docker | bool


  tasks:
    - include_tasks: tasks/instalar.yml
    - include_tasks: tasks/configurar.yml
    - include_tasks: tasks/gerenciar.yml
      loop:
        - "{{CONTAINER_NOME_WEB}}"
        - "{{CONTAINER_NOME_PROSODY}}"
        - "{{CONTAINER_NOME_JICOFO}}"
        - "{{CONTAINER_NOME_JVB}}"
      loop_control:
        loop_var: container_nome
      tags: configurar

  # roles:
  #   - ansible-role-docker
  #   - ansible-role-pip
