#!/usr/bin/env python3
#-*- coding:utf-8 -*-


import requests
import sys
import json
import getopt

versao= '1.1'
servidor = "localhost"
porta = "8081"

def exibir_help():
    print(
    '''
App: Conectar em servidor jitsi JVB, coletar statísticas e exibir as informações desejadas
uso:
  jitsi-stats [-s <IP_DO_SERVIDOR>] [-p <PORTA_DA_INTERFACE_COLIBRI>] [-P <NOME_DO_PARAMETRO>]

Onde:
  -s, --servidor      endereço IP do servidor a se conectar. Default: localhost
  -p, --porta         porta da interface rest colibri. Default: 8081
  -P, --parametros    parâmetros a exibir separado por virgula. Default: mostra todos os parâmetros

Exemplo:

 Exibir todas as parâmetros do servidor localhost:

   jitsi-stats

Exibir todos os parâmetros do servidor 192.168.0.10

  jitsi-stats -s 192.168.0.10

Exibir parâmetro 'conferences' do servidor 192.168.0.10 que escuta na porta 8080

jitsi-stats -s 192.168.0.10 -p 8080 -P conferences

Exibir multiplos parâmetros 'conferences,participants' do servidor 192.168.0.10 que escuta na porta 8080
jitsi-stats -s 192.168.0.10 -p 8080 -P conferences,participants

AUTOR: Antonio Alisio de Meneses Cordeiro - alisio.cordeiro@serpro.gov.br

    '''
    )
    quit()



options, remainder = getopt.getopt(sys.argv[1:], 's:p:P:h', ['servidor=',
                                                         'porta=',
                                                         'parametros=',
                                                         'help',
                                                         ])

for opt, arg in options:
    if opt in ('-s', '--servidor'):
        servidor = arg
    elif opt in ('-p', '--porta'):
        porta = arg
    elif opt in ('-P', '--parametros'):
        parametros = arg.split(',')
    elif opt in ('-h', '--help'):
        exibir_help()


resposta = requests.get("http://" + servidor + ":" + porta + "/colibri/stats")
try:
    parametros
except NameError:
    print ("Coletando dados do servidor " + servidor + ", na porta " + porta + ".")
    parametros = []
    for parametro in resposta.json():
        print(str(parametro) + ': ' + str(resposta.json()[parametro]))
else:
    if len(parametros) > 1:
        print ("Coletando dados do servidor " + servidor + ", na porta " + porta + ".")
        for parametro in parametros:
            print(str(parametro) + ': ' + str(resposta.json()[parametro]))
    else:
        print(resposta.json()[parametros[0]])
